diff -Naur ./mscload/lib/stm32f4/boot.inc ./mscload-flash/lib/stm32f4/boot.inc
--- ./mscload/lib/stm32f4/boot.inc	2017-08-31 18:16:32.000000000 +0200
+++ ./mscload-flash/lib/stm32f4/boot.inc	2017-09-01 10:47:01.132421040 +0200
@@ -8,7 +8,7 @@
 VPATH += $(ROOT_PATH)/lib/$(TARGET)/src
 
 LDFLAGS  += -nostartfiles
-LD_SCRIPT = -T boot_ram.ld
+LD_SCRIPT = -T boot_flash.ld
 
 #OBJM  =
 OBJM += boot.o
diff -Naur ./mscload/lib/stm32f4/user.inc ./mscload-flash/lib/stm32f4/user.inc
--- ./mscload/lib/stm32f4/user.inc	2017-08-31 18:16:32.000000000 +0200
+++ ./mscload-flash/lib/stm32f4/user.inc	2017-09-01 10:47:01.132421040 +0200
@@ -6,7 +6,7 @@
 VPATH += $(ROOT_PATH)/lib/$(TARGET)/src
 
 LDFLAGS  += -nostartfiles
-LD_SCRIPT = -T user_ram.ld
+LD_SCRIPT = -T user_flash.ld
 
 OBJM  =
 OBJM  = user.o
diff -Naur ./mscload/work/boot/boot.c ./mscload-flash/work/boot/boot.c
--- ./mscload/work/boot/boot.c	2017-08-31 18:16:32.000000000 +0200
+++ ./mscload-flash/work/boot/boot.c	2017-09-01 10:47:01.136420982 +0200
@@ -245,6 +245,8 @@
 extern uint32_t check_user   (void);
 extern void jump_to_firmware (void);
 
+extern void toRamFunc (void);
+__attribute__((section(".after_vector")))
 void Reset_Handler (void) {
   register unsigned int *src, *dst, *end;
 
@@ -259,6 +261,9 @@
   end = &_edata;
   while (dst < end) *dst++ = *src++;
 
+  toRamFunc();
+}
+void toRamFunc (void) {
   SystemInit();
   SystemCoreClockUpdate();          // Potřebné pro USART
   static_init();                    // Zde zavolám globální konstruktory
diff -Naur ./mscload/work/boot/fat12emul.cpp ./mscload-flash/work/boot/fat12emul.cpp
--- ./mscload/work/boot/fat12emul.cpp	2017-08-31 18:16:32.000000000 +0200
+++ ./mscload-flash/work/boot/fat12emul.cpp	2017-09-01 10:52:57.775384613 +0200
@@ -40,7 +40,7 @@
     .Reserved_Logical_Sectors    = 1,
     .Number_Of_FATs              = 1,
     .Maximum_Directory_Entries   = 16,
-    .Total_Logical_Sectors       = 128, 
+    .Total_Logical_Sectors       = 640,       // max. 320KiB, dal jen zvetsit cluster
     .Media_Descriptor            = 0xF8,
     .Logical_Sectors_Per_FAT     = 1
   }
diff -Naur ./mscload/work/boot/Makefile ./mscload-flash/work/boot/Makefile
--- ./mscload/work/boot/Makefile	2017-09-01 10:42:54.000000000 +0200
+++ ./mscload-flash/work/boot/Makefile	2017-09-01 10:48:22.943240574 +0200
@@ -27,7 +27,8 @@
 
 OBJS+= gpio.o
 OBJS+= fat12emul.o
-OBJS+= imagewriter.o
+OBJS+= flashwriter.o
+OBJS+= flash.o
 OBJS+= jump.o
 OBJS+= context.o
 OBJS+= checks.o
diff -Naur ./mscload/work/post/main.cpp ./mscload-flash/work/post/main.cpp
--- ./mscload/work/post/main.cpp	2017-08-28 09:07:46.000000000 +0200
+++ ./mscload-flash/work/post/main.cpp	2017-09-01 10:49:41.630121098 +0200
@@ -73,9 +73,11 @@
   if (sb != sf) {
     fprintf (stderr, SRED"ERROR: Firmware musi zacinat na %08X, ale zacina na %08X !!!\n"
                      " !! Upravte ld script firmware !! - napr. lze pouzit (v adresari lib/stm32f4) :\n"SDEFC, sb, sf);
+    /* plati jen pro RAM
     unsigned mlen = 112 * 0x400 - (sb & ~0x28000000);
     fprintf (stderr, "sed -r \'s/RAM[^K]+?K[.]+?/RAM (xrw)       : ORIGIN = 0x%08X,"
                      " LENGTH = 0x%X/\' stm32_ram.ld >user_ram.ld\n", sb, mlen);
+    */
   }
 }
 
